>L.
    1 DISC=TRUE:PROT=(NOT DISC)
    5REM Source Code for ELITE  (the loader)
    7MODE7
    8HIMEM=&4000:CODE=&4000:DIMTEMP%256
   10 IF NOT DISC THEN LOD%=&F1F ELSE LOD%=&1100
   14C%=&F40:S%=C%:L%=LOD%+&28:D%=&563A:LC%=&6000-C%:svn=&7FFD:len1=15:len2=18:len=len1+len2
   15LE%=&B00:  REM  Move Mover to here while CODE loading
   16LL%=&E00+(DISC AND&300): REM Where this loader loads
   20MOS=S%+8:TRTB%=4:NETV=&224
 1000OSWRCH=&FFEE:OSBYTE=&FFF4:OSWORD=&FFF1:SCLI=&FFF7:IRQ1V=&204:osprnt=&234
 1010ZP=&70:P=&72:Q=&73:YY=&74:T=&75:sc=&76:BLPTR=&78:V219=&7A:K3=&80:BLCNT=&81:BLN=&83:EXCN=&85
 1020FF=&FF
 1030VIA=&FE40:USVIA=VIA:VSCAN=57-1:VEC=&7FFE
 2000OSCLI("L.:0.WORDS9 "+STR$~CODE)
 2010OSCLI("L.:0.DIALSHP "+STR$~(CODE+&400))
 2020OSCLI("L.:2.P.ELITE "+STR$~(CODE+&C00))
 2030OSCLI("L.:2.P.A-SOFT "+STR$~(CODE+&D00))
 2040OSCLI("L.:2.P.(C)ASFT "+STR$~(CODE+&E00))
 2050REMOSCLI("L.:2.P.NAME$ "+STR$~(CODE+&E00))
 3000FORZ=4TO6STEP2
 3010P%=LL%+&400+&800+&300:O%=CODE+&400+&800+&300
 3012[OPTZ:.run JMPENTRY:]
 3015RESTORE:READN%
 3020B%=P%:FORI%=0TON%-1:READA:PROCP(A):NEXT
 3100E%=P%:FORI%=1TO4:FORJ%=1TO14:READA:PROCP(A):NEXT,
 4000[OPTZ:.swine LDA#&7F:STA&FE4E:JMP(&FFFC)
 4010\ This bit runs where it loads
 4900.OSB LDY#0:JMPOSBYTE:EQUS"R.ELITEcode":EQUB13:EQUS"By D.Braben/I.Bell":EQUB13:EQUB&B0:.oscliv EQUW&FFF7:.David9 EQUW David5:CLD:.David23 EQUW (512-len)
 4910.doPROT1 LDY#&DB:STYTRTB%:LDY#&EF \0.1 look-up keys:STYTRTB%+1:LDY#2:STYV219+1:STAPROT1-255,X:LDY#&18:STYV219+1,X:RTS:.MHCA EQUB&CA:.David7 BCCIan1
 5000.ENTRY SEI:CLD:]IF NOT DISC THEN[OPTZ:LDA#0:LDX#FF:JSROSBYTE:TXA:BEQOS100:LDY&FFB6:LDA&FFB7:STAZP:LDA&FFB8:STAZP+1:DEY:.ABCDEFG LDA(ZP),Y:STA&200,Y:DEY:BPLABCDEFG:.OS100:]IF0ELSE:[OPTZ
 5002LDA#&7F:STA&FE4E:STA&FE6E:LDA&FFFC:STA&200:STA&202:STA&206:STA&220:LDA&FFFD:STA&201:STA&203:STA&207:STA&221 \ Cold reset (Power on) on BRK,USER,& unrecog IRQ
 5003LDX#&2F-2:.purge LDA&202,X:ORA#&C0:STA&202,X:DEX:DEX:BPLpurge
 5004LDA#&60:STA&232:LDA#2:STANETV+1:LDA#&32:STANETV \Knock out NETVEC
 5005LDA#32:EQUB&2C:.Ian1 BNEDavid3:STADavid2:LSRA:LDX#3:STXBLPTR+1:STXBLN+1:STXEXCN+1:DEX:JSROSBYTE \ADC
 5006EQUB&2C:.FRED1 BNEDavid7
 5007LDX#255:LDA#&48:JSRdoPROT1:LDA#144:JSROSB \TV
 5008LDA#247:LDX#0:JSROSB \BREAK vec
 5009\LDA#&81\LDY#FF\LDX#1\JSROSBYTE\TXA\BPLOS01 \Damn 0.1
 5010LDA#190:LDX#8:JSROSB \8bitADC
 5012EQUB&2C:.David8 BNEFRED1
 5015LDA#&8F:LDX#&C:LDY#FF:JSROSBYTE \ claim NMIs
 5030LDA#13:.abrk LDX#0:JSROSB \otput bffer
 5050LDA#225:LDX#128:JSROSB \fn keys
 5055LDA#172:LDX#0:LDY#255:JSROSBYTE:STXTRTB%:STYTRTB%+1 \int-ascii table
 5058LDA#200:LDX#3:JSROSB:]IF PROT AND NOT DISC THEN[OPTZ:CPX#3:BNEabrk+1 \Clear memory on BREAK :]
 5059[OPTZ
 5060LDA#13:LDX#2:JSROSB \kybrd buffer
 5062.OS01
 5065LDX#FF:TXS:INX:.David3 LDABEGIN%,X:.PROT1 INY \PHA:INX:CPX#len:BNEDavid8 \^stack
 5070LDA#(B% MOD256):STAZP:LDA#&C8:STAPROT1:LDA#(B% DIV256):STAZP+1:LDY#0:.LOOP LDA(ZP),Y:JSROSWRCH:INY:CPY#N%:BNELOOP \set up pokey-mode-4
 5080LDA#1:TAX:TAY:STA(V219),Y:LDA#4:JSROSB \cursor
 5090LDA#9:LDX#0:JSROSB \flashing
 5095LDA#&6C:EORcrunchit:STAcrunchit
 5101EQUS FNE(0):EQUS FNE(1):EQUS FNE(2):EQUS FNE(3) \envelopes
 5103\
 5110LDX#4:STXP+1:LDA#(LL%DIV256):STAZP+1:LDY#0:LDA#256-len1:STA(V219-4,X):STYZP:STYP:JSRcrunchit \Move WORDS9 to &400
 5115LDX#1:LDA#((LL%DIV256)+&C):STAZP+1:LDA#&63:STAP+1:LDY#0:JSRcrunchit:LDX#1:LDA#((LL%DIV256)+&D):STAZP+1:LDA#&61:STAP+1:LDY#0:JSRcrunchit:LDX#1:LDA#((LL%DIV256)+&E):STAZP+1:LDA#&76:STAP+1:LDY#0:JSRcrunchit
 5117JSRPLL1 \draw Saturn
 5120LDX#8:LDA#((LL%DIV256)+4):STAZP+1:LDA#&78:STAP+1:LDY#0:STYZP:STYBLCNT:STYP:JSRcrunchit \Move DIALSHP to &7800
 5130LDX#(3-(DISC AND1)):LDA#(UU%DIV256):STAZP+1:LDA#(UU%MOD256):STAZP:LDA#(LE%DIV256):STAP+1:LDY#0:STYP:JSRcrunchit \Move Part of this program to LE%
 5135STYDavid3-2:\LDY#0:.David2 EQUB&AC:EQUW&FFD4 \JSR&FFD4:.LBLa LDAC%,X:EOR#&A5:STAC%,X:DEX:BNELBLa:JMP(C%+&CF):.swine2 jmpswine:EQUW&4CFF:.crunchit BRK:EQUW David23:.RAND EQUD &6C785349:.David5 INY:CPY#(ENDBLOCK-BLOCK):BNEDavid2
 5140SEI:LDA#&C2:STAVIA+&E:LDA#&7F:STA&FE6E:LDAIRQ1V:STAVEC:LDAIRQ1V+1:BPLswine2:STAVEC+1:LDA#(IRQ1 DIV256):STAIRQ1V+1:LDA#(IRQ1 MOD256):STAIRQ1V:LDA#VSCAN:STAUSVIA+5:CLI \ INTERRUPTS NOW OK
 5145:] IF DISC THEN [OPTZ:LDA#&81:STA&FE4E:LDY#20:JSROSBYTE:LDA#1:STA&FE4E:]
 5146[OPTZ
 5190RTS  \ENTRY2 on stack already
 5210.PLL1 LDAVIA+4:STARAND+1:JSRDORND:JSRSQUA2:STAZP+1:LDAP:STAZP:JSRDORND:STAYY:JSRSQUA2:TAX:LDAP:ADCZP:STAZP:TXA:ADCZP+1:BCSPLC1
 5220STAZP+1:LDA#1:SBCZP:STAZP:LDA#&40:SBCZP+1:STAZP+1:BCCPLC1:JSRROOT:LDAZP:LSRA:TAX:LDAYY:CMP#128:RORA:JSRPIX
 5230.PLC1 DECCNT:BNEPLL1:DECCNT+1:BNEPLL1:LDX#&C2:STXEXCN
 5240.PLL2 JSRDORND:TAX:JSRSQUA2:STAZP+1:JSRDORND:STAYY:JSRSQUA2:ADCZP+1:CMP#&11:BCCPLC2:LDAYY:JSRPIX
 5250.PLC2 DECCNT2:BNEPLL2:DECCNT2+1:BNEPLL2:LDXMHCA:STXBLPTR:LDX#&C6:STXBLN
 5260.PLL3 JSRDORND:STAZP:JSRSQUA2:STAZP+1:JSRDORND:STAYY:JSRSQUA2:STAT
 5270ADCZP+1:STAZP+1:LDAZP:CMP#128:RORA:CMP#128:RORA:ADCYY:TAX:JSRSQUA2:TAY:ADCZP+1
 5280BCSPLC3:CMP#&50:BCSPLC3:CMP#&20:BCCPLC3:TYA:ADCT:CMP#&10:BCSPL1:LDAZP:BPLPLC3:.PL1 LDAYY:JSRPIX
 5290.PLC3 DECCNT3:BNEPLL3:DECCNT3+1:BNEPLL3
 5300.DORND LDARAND+1:TAX:ADCRAND+3:STARAND+1:STXRAND+3:LDARAND:TAX:ADCRAND+2:STARAND:STXRAND+2:RTS
 5320.SQUA2 BPLSQUA:EOR#FF:CLC:ADC#1
 5330.SQUA STAQ:STAP:LDA#0:LDY#8:LSRP:.SQL1 BCCSQ1:CLC:ADCQ:.SQ1 RORA:RORP:DEY:BNESQL1:RTS
 5340.PIX TAY:EOR#128:LSRA:LSRA:LSRA:ORA#&60:STAZP+1:TXA:EOR#128:AND#&F8:STAZP:TYA:AND#7:TAY:TXA:AND#7:TAX
 5350LDATWOS,X:ORA(ZP),Y:STA(ZP),Y:RTS
 5360.TWOS EQUD &10204080:EQUD&01020408
 5370.CNT EQUW&500:.CNT2 EQUW &1DD:.CNT3 EQUW &500
 5380.ROOT LDYZP+1:LDAZP:STAQ:LDX#0:STXZP:LDA#8:STAP:.LL6 CPXZP:BCCLL7:BNELL8:CPY#&40:BCCLL7:.LL8 TYA:SBC#&40:TAY:TXA:SBCZP:TAX:.LL7 ROLZP:ASLQ:TYA:ROLA:TAY:TXA:ROLA:TAX:ASLQ:TYA:ROLA:TAY:TXA:ROLA:TAX:DECP:BNELL6:RTS
 5390.BEGIN% EQUB(David9 DIV256):EQUB(David9 MOD256):EQUB&6C \JMP:EQUB(TUT DIV256):EQUB(TUT MOD256):EQUB&99 \STA,Y:EQUB(TUT DIV256):EQUB(TUT MOD256):EQUB&59 \EOR,Y:PHA:EQUB((BLOCK)DIV256):EQUB((BLOCK)MOD256):EQUB&B9 \LDA,Y:PLA:PLA
 5394.DOMOVE RTS:EQUW&D0EF \BNEMVDL:DEX:EQUBZP+1:INCP+1:EQUB&E6 \INCP+1 INCZP+1:EQUW&D0F6 \BNEMVDL:DEY:EQUBP:EQUB&91 \STA(),Y:EQUB(OSB DIV256):EQUB(OSB MOD256):EQUB&59 \EOR:EQUBZP:EQUB&B1 \LDA(),Y        \ 18 Bytes ^ Stack
 5400.UU%:]:Q%=P%-LE%:P%=LE%:[OPTZ
 5450.CHECKbyt BRK:.MAINSUM EQUB&CB:EQUB0:.FOOLV EQUW FOOL:.CHECKV EQUWLOD%+1
 5460.block1 EQUD&A5B5E5F5:EQUD&26366676:EQUD&8494C4D4:.block2 EQUD&A0B0C0D0:EQUD&8090E0F0:EQUD&27376777 \ Colours for interrupts
 5500.TT26\ PRINT  Please tidy this up!
 5510STAK3:TYA:PHA:TXA:PHA
 5520.rr LDAK3:CMP#7:BEQR5:CMP#32:BCSRR1:CMP#13:BEQRRX1:INCYC:.RRX1 LDX#7:STXXC:BNERR4
 5530.RR1
 5540LDX#&BF:ASLA:ASLA:BCCP%+4:LDX#&C1:ASLA:BCCP%+3:INX:STAP:STXP+1
 5550LDAXC:CMP#20:BCCNOLF:LDA#7:STAXC:INCYC:.NOLF ASLA:ASLA:ASLA:STAZP:INCXC:LDAYC:CMP#19:BCCRR3:LDA#7:STAXC:lda#&65:stasc+1:ldy#7*8:ldx#14:stysc:lda#0:tay:.David1 sta(sc),Y:iny:cpy#14*8:bccDavid1:tay:incsc+1:dex:bplDavid1:lda#5:STAYC
 5560bnerr:.RR3 ORA#&60:STAZP+1:LDY#7:.RRL1 LDA(P),Y:STA(ZP),Y:DEY:BPLRRL1
 5570.RR4 PLA:TAX:PLA:TAY:LDAK3:.FOOL RTS
 5580.R5 lda#7:jsrosprint:JMPRR4
 5590.TUT  \EOR here onward:.osprint jmp(osprnt):EQUB&6C:.command jmp(oscliv):.MESS1 EQUS FNLSTR:EQUB13 \*LOAD ELITEcode
 5800.ENTRY2 lda&20E:staosprnt:LDA#(TT26 MOD256):STA&20E:LDX#(MESS1 MOD256):lda&20F:staosprnt+1:LDA#(TT26 DIV256):LDY#(MESS1 DIV256):STA&20F \OSWRCH for loading messages
 5805JSRAFOOL:JSRcommand:JSR512-len+CHECKER-ENDBLOCK :JSRAFOOL: \ (Gratuitous JSRs)- LOAD Mcode and checksum it.
 5810]IF DISC THEN [OPTZ:LDA#140:LDX#12:JSROSBYTE \*TAPE :]
 5811[OPTZ
 5820LDA#0:STAsvn
 5830LDX#(LC% DIV256):LDA#(L% MOD256):STAZP:LDA#(L% DIV256):STAZP+1:LDA#(C% MOD256):STAP:LDA#(C% DIV256):STAP+1:LDY#0
 5840.ML1 TYA:EOR(ZP),Y:STA(P),Y:INY:BNEML1:INCZP+1:INCP+1:DEX:BPLML1  \Move code down (d)
 5850LDAS%+6:STA&202:LDAS%+7:STA&203:LDAS%+2:STA&20E:LDAS%+3:STA&20F \BRK,OSWRCH     :RTS - ON STACK :.AFOOL JMP(FOOLV)
 5852.M2 EQUB2:.VIA2 LDA#4:STA&FE20:LDY#11:.inlp1 LDAblock1,Y:STA&FE21:DEY:BPLinlp1:PLA:TAY:JMP(VEC):.IRQ1:TYA:PHA:]
 5853IF PROT AND NOT DISC THEN [OPTZ:LDY#0:LDA(BLPTR),Y:BITM2:BNEitdone:EOR#128+3:INCBLCNT:BNEZQK:DECBLCNT:.ZQK STA(BLPTR),Y:LDA#&23:CMP(BLN),Y:BEQP%+4:EOR#17:CMP(EXCN),Y:BEQitdone:DECLOD%:.itdone:]
 5854[OPTZ:LDAVIA+&D:BITM2:BNELINSCN:AND#64:BNEVIA2:PLA:TAY:JMP(VEC)
 5856.LINSCN LDA#50:STAUSVIA+4:LDA#VSCAN:STAUSVIA+5:LDA#8:STA&FE20:LDY#11:.inlp2 LDAblock2,Y:STA&FE21:DEY:BPLinlp2:PLA:TAY:JMP(VEC)
 5857\
 5859.BLOCK \ Pushed onto stack for execution   :EQUW ENTRY2-1:EQUW 512-len+BLOCK-ENDBLOCK+3
 5860LDAVIA+4:STA1:SEI:LDA#&39:STAVIA+&E:\LDA#&7F:\STA&FE6E:\LDAIRQ1V:\STAVEC:\LDAIRQ1V+1:\STAVEC+1  Already done:LDAS%+4:STAIRQ1V:LDAS%+5:STAIRQ1V+1:LDA#VSCAN:STAUSVIA+5:CLI \Interrupt vectors
 5870\LDA#&81LDY#FFLDX#1JSROSBYTETXAEOR#FFSTAMOS \FF if MOS0.1 else 0
 5880\BMIBLAST:LDY#0:LDA#200:LDX#3:JSROSBYTE:.BLAST \break,escape
 5890LDA#(S% DIV256):STAZP+1:LDA#(S% MOD256):STAZP:LDX#&45:LDY#0:TYA:.CHK CLC:ADC(ZP),Y:INY:BNECHK:INCZP+1:DEX:BPLCHK:CMPD%-1:BEQitsOK:.nononono STAS%+1:LDA#&7F:STA&FE4E:JMP(&FFFC):.itsOK JMP(S%)
 5900.CHECKER LDY#0:LDX#4:STXZP+1:STYZP:TYA:.CHKq CLC:ADC(ZP),Y:INY:BNECHKq:INCZP+1:DEX:BNECHKq:CMPMAINSUM+1:BNEnononono
 5905TYA:.CHKb CLC:ADCLOD%,Y:INY:CPY#&28:BNECHKb:CMPMAINSUM:BNEnononono
 5910] IF PROT AND NOT DISC THEN [OPTZ:LDABLCNT:CMP#&4F:BCCnononono:]
 5920[OPTZ:JMP(CHECKV)
 6050.ENDBLOCK \ no more on to stack
 6060.XC EQUB7:.YC EQUB6
 7000]
 7020NEXTZ
 7040FORI%=0TO ENDBLOCK-BLOCK STEP4:I%!TEMP%=I%!(BLOCK-P%+O%):NEXT:FORI%=0TO ENDBLOCK-BLOCK-1:?(ENDBLOCK-P%+O%-I%-1)=I%?TEMP%:NEXT
 7042A%=0:FORI%=CODE TOCODE+&3FF:A%=A%+?I%:NEXT:?(MAINSUM-P%+O%+1)=A%
 7045A%=0:FORI%=LE%-P%+O%+1TOLE%-P%+O%+383:A%=A%+?I%:NEXT:?(CHECKbyt-P%+O%)=A%
 7050FORI%=0TO ENDBLOCK-BLOCK-1:?(I%+TUT-P%+O%)=(?(I%+TUT-P%+O%))EOR(?(I%+BLOCK-P%+O%)):NEXT
 7060FORI%=0TO2-(DISC AND1):FORJ%=0TO255STEP4:!(J%+I%*256+UU%-P%-Q%+O%)=(!(J%+I%*256+UU%-P%-Q%+O%))EOR(!(OSB-P%-Q%+O%+J%)):NEXT,
 7070FORI%=0TO&E:FORJ%=0TO255STEP4:!(J%+I%*256+CODE)=(!(J%+I%*256+CODE))EOR(!(OSB-P%-Q%+O%+J%)):NEXT,
 7100PRINT"Memory usage: B00 - ";~P%'~LL%;" - ";~P%+Q%'"Stack       :";len+ENDBLOCK-BLOCK
 7110INPUT'"Press <RETURN> to save on drive 0"A$
 7120OSCLI("S.:0.ELITE "+STR$~CODE +" "+STR$~O% +" "+STR$~run +" "+STR$~LL%)
 7200END
 8000DATA67
 8100DATA 22,4,28,2,17,15,16
 8110DATA 23,0, 6,31,0,0,0,0,0,0
 8112DATA 23,0,12,12,0,0,0,0,0,0
 8114DATA 23,0,13, 0,0,0,0,0,0,0
 8116DATA 23,0, 1,32,0,0,0,0,0,0
 8118DATA 23,0, 2,45,0,0,0,0,0,0
 8120DATA 23,0,10,32,0,0,0,0,0,0
 9100DATA1,1,0,111,-8,4,1,8, 8,-2,0,-1,112,44
 9110DATA2,1,14,-18,-1,44,32,50, 6,1,0,-2,120,126
 9120DATA3,1,1,-1,-3,17,32,128,1,0,0,-1,1,1
 9130DATA4,1,4,-8,44,4,6,8,22,0,0,-127,126,0
10000DEFPROCP(A):?O%=A:O%=O%+1:P%=P%+1:ENDPROC
10100DEF FNE(I%)
10110[OPTZ
10120LDX#((E%+I%*14)MOD256):LDY#((E%+I%*14)DIV256):LDA#8:JSROSWORD
10130]
10140=""
10200DEFFNLSTR:IF DISC THEN ="L.ELTcode 1100" ELSE ="L.ELITEcode F1F"
>*SPOOL
